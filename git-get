#!/bin/bash
#
# Clone a github or other remote git repository to a predefined local location
# Similar to "go get"
#

PROJECTS=${PROJECTS:-"$HOME/projects"}

if [[ -z $1 ]]; then
	cat 1>&2 <<-EOF

		git-get: git clone a repository into \$PROJECTS (default: $PROJECTS).

		Usage:
		    git get <repository_url>

		Examples:
		    git get git@github.com:mjuric/lsd
		    git get https://github.com/mjuric/lsd
		    git get mjuric/lsd
		    git get lsd

		Author:  Mario Juric <mjuric@astro.washington.edu>
		License: MIT (https://opensource.org/licenses/MIT)
	EOF
	exit -1;
fi

# Supported URL types:
#   user@host.name:base/dir/reponame
#   https://host.name/base/dir/reponame
#   org/reponame (defaults to looking for it at git@github.com)
#   reponame (if $PWD is in $PROJECTS/github.com/SOME_ORG/)
URL="$1"
if [[ $URL == "https://"* ]]; then
	echo "H"
	HOST=$(cut -d / -f 3 <<< "$URL")
	DIR=$(cut -d / -f 4- <<< "$URL")
elif [[ $URL == *"@"* ]]; then
	echo "G"
	IFS=':' read -ra A <<< "$URL"
	FRONT="${A[0]}"
	DIR="${A[1]}"

	[[ -z $DIR ]] && { echo "error: malformed URL -- $URL is missing a colon."; exit -1; }

	HOST=$(sed -E 's#^[^@]+@(.*)$#\1#' <<< "$FRONT")
else
	IFS='/' read -ra A <<< "$URL"

	if [[ ${#A[@]} == 1 ]]; then
		# see if $PWD is in a subdirectory of $PROJECTS/org/
		if [[ $PWD = $PROJECTS/github.com/* ]]; then
			SUFFIX=${PWD#"$PROJECTS/"}
			IFS='/' read -ra A <<< "$SUFFIX"
			ORG="${A[1]}"

			DIR="$ORG/$URL"
		else
			echo "error: to use the \`$(basename $0) repo\` syntax, you need to be in a subdirectory of $PROJECTS.";
			exit -1;
		fi
	else
		[[ ${#A[@]} == 2 ]] || { echo "error: malformed URL -- expected organization/repo_name." 1>&2; exit -1; }

		DIR="$URL"
	fi
	HOST="github.com"
	URL="git@github.com:$DIR"
fi

# Construct destination directory, removing any .git extensions
DIR="$PROJECTS/$HOST/$DIR"
DIR="${DIR%.git}"

# refuse to work if the dir already exists
if [[ -e "$DIR" ]]; then
	echo "error: $DIR already exists." 1>&2
	exit -1;
fi

# create the destination directory and clone
mkdir -p "$(dirname DIR)"
git clone "$URL" "$DIR"
