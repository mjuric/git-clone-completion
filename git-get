#!/bin/bash
#
# Clone a github or other remote git repository to a predefined local location
# Similar to "go get"
#

# source config file
if [[ -f ~/.gitgetrc ]]; then
	# possible values:
	#   dir=<directory where to clone to>
	#   org=<default github user or organization, if none specified>
	. ~/.gitgetrc
fi

# compute $BASEDIR; default to $HOME/projects
basedir=${dir:-"$HOME/projects"}
BASEDIR=${PROJECTS:-"$basedir"}

# compute $ORG; default to current user's username
org=${org:-"$USER"}
ORG=${ORG:-"$org"}

usage()
{
	cat 1>&2 <<-EOF

		git-get: git clone a repository into \$PROJECTS (default: $BASEDIR).

		Usage:
		    git get [-h|--help] <repository_url>

		Examples:
		    git get git@github.com:mjuric/lsd
		    git get https://github.com/mjuric/lsd
		    git get mjuric/lsd
		    git get lsd

		Author:  Mario Juric <mjuric@astro.washington.edu>
		License: MIT (https://opensource.org/licenses/MIT)
	EOF
}

# parse cmdline options
if [[ $1 == "--help" || $1 == "-h" || -z $1 || $1 == -* ]]; then
	usage
	exit -1;
fi

# Supported URL types:
#   user@host.name:base/dir/reponame
#   https://host.name/base/dir/reponame
#   org/reponame (defaults to looking for it at git@github.com)
#   reponame (if $PWD is in $BASEDIR/github.com/SOME_ORG/)
URL="$1"
if [[ $URL == "https://"* ]]; then
	HOST=$(cut -d / -f 3 <<< "$URL")
	DIR=$(cut -d / -f 4- <<< "$URL")
elif [[ $URL == *"@"* ]]; then
	IFS=':' read -ra A <<< "$URL"
	FRONT="${A[0]}"
	DIR="${A[1]}"

	[[ -z $DIR ]] && { echo "error: malformed URL -- $URL is missing a colon."; exit -1; }

	HOST=$(sed -E 's#^[^@]+@(.*)$#\1#' <<< "$FRONT")
else
	IFS='/' read -ra A <<< "$URL"

	if [[ ${#A[@]} == 1 ]]; then
		# see if $PWD is in a subdirectory of $BASEDIR/org/
		if [[ $PWD = $BASEDIR/github.com/* ]]; then
			SUFFIX=${PWD#"$BASEDIR/"}
			IFS='/' read -ra A <<< "$SUFFIX"
			DEST="${A[1]}"
		else
			DEST="$ORG"
		fi
		echo $BASEDIR -- $DEST -- $URL 1>&2
		DIR="$DEST/$URL"
	else
		[[ ${#A[@]} == 2 ]] || { echo "error: malformed URL -- expected organization/repo_name." 1>&2; exit -1; }

		DIR="$URL"
	fi
	HOST="github.com"
	URL="git@github.com:$DIR"
fi

# Construct destination directory, removing any .git extensions
DIR="$BASEDIR/$HOST/$DIR"
DIR="${DIR%.git}"

if [[ ! -e "$DIR" ]]; then
	# create the destination directory and clone
	mkdir -p "$(dirname DIR)"
	git clone "$URL" "$DIR" && echo "cloned to $DIR"
else
	echo "already exists in $DIR"
fi
